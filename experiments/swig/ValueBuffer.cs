//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ValueBuffer : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ValueBuffer(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ValueBuffer obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ValueBuffer() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          CSEvalPINVOKE.delete_ValueBuffer(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public ValueBuffer() : this(CSEvalPINVOKE.new_ValueBuffer(), true) {
  }

  public BufferType m_type {
    set {
      CSEvalPINVOKE.ValueBuffer_m_type_set(swigCPtr, (int)value);
    } 
    get {
      BufferType ret = (BufferType)CSEvalPINVOKE.ValueBuffer_m_type_get(swigCPtr);
      return ret;
    } 
  }

  public SWIGTYPE_p_void m_buffer {
    set {
      CSEvalPINVOKE.ValueBuffer_m_buffer_set(swigCPtr, SWIGTYPE_p_void.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = CSEvalPINVOKE.ValueBuffer_m_buffer_get(swigCPtr);
      SWIGTYPE_p_void ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_void(cPtr, false);
      return ret;
    } 
  }

  public SWIGTYPE_p_std__vectorT_int_t m_indices {
    set {
      CSEvalPINVOKE.ValueBuffer_m_indices_set(swigCPtr, SWIGTYPE_p_std__vectorT_int_t.getCPtr(value));
      if (CSEvalPINVOKE.SWIGPendingException.Pending) throw CSEvalPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_std__vectorT_int_t ret = new SWIGTYPE_p_std__vectorT_int_t(CSEvalPINVOKE.ValueBuffer_m_indices_get(swigCPtr), true);
      if (CSEvalPINVOKE.SWIGPendingException.Pending) throw CSEvalPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public SWIGTYPE_p_std__vectorT_int_t m_colIndicies {
    set {
      CSEvalPINVOKE.ValueBuffer_m_colIndicies_set(swigCPtr, SWIGTYPE_p_std__vectorT_int_t.getCPtr(value));
      if (CSEvalPINVOKE.SWIGPendingException.Pending) throw CSEvalPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_std__vectorT_int_t ret = new SWIGTYPE_p_std__vectorT_int_t(CSEvalPINVOKE.ValueBuffer_m_colIndicies_get(swigCPtr), true);
      if (CSEvalPINVOKE.SWIGPendingException.Pending) throw CSEvalPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}
